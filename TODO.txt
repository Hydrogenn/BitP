##Upcoming features
(to-do list)

- Continue revising and editing the language
  - [ ] Revision v0.5.0
    - [ ] Add a `#` operator which seperates threads
    - [ ] Remove the `+` SET operator
    - [ ] Change the `<` and `>` shift operators to instead 
    - [ ] Replace the `-` SELECT operator with `{` REMEMBER operator
    - [ ] Change the symbol of `_` READ to `-`
    - [ ] Change the symbol of `.` COMMIT to `}`
    - [ ] Change the order of the commands
    - [ ] Flip the order for the READ operator
    - [ ] Look for other changes that would enhance the language
      - Namely with the `%` EXTERN function
- [ ] Get the compiler to ignore characters bound by ' apostrophes
- [ ] Create new (and seperate) compilers and editors
  - [ ] COMPILER
    - [ ] Compile the given script
    - [ ] Create a binary file
      - [ ] Decide whether to use .bpi ('bitp interpretable') or no extension
    - [ ] Take file input instead of defaulting to 'script.bp' at this directory
  - [ ] INTERPRETER
    - [ ] Read a given script and functions in a command line environment
    - [ ] Rewrite the given script file to the current state when exiting normally
    - [ ] Take file input instead of defaulting to 'script.bpi' at this directory
    - [ ] Seperate debug flag to print debug info
    - [ ] Seperate read flag to prevent writing over the script file
- [ ] Improve debugging
  - [ ] Reduce clutter
    - [ ] Stop displaying '..' when NOT skipped
    - [ ] Stop displaying '.' when NOT a value
  - [ ] Edit stack display
    - [ ] Show the selected value in the stack as the last one
    - [ ] Show the rest as beneath it
    - [ ] Show a '!' when nearing the disc limit
  - [ ] Breakpoint lookup
    - [ ] Take '*' to mean a break point in the script
      - [x] Does not add to the length of the bit script
      - [ ] Briefly stops the program for input
        - [ ] Input allows code injections
        - [ ] Input allows the code to continue
    - [ ] Force a breakpoint every some number of lines
    - [ ] 
  - [ ] Clean up the printing to display the character at the end of the debug and the total before input
  - [ ] Display the function character instead of the numerical value
    - [ ] Display the numerical value when actually looking at the value of
    - [ ] Do not display the '$' character when looking at a value to reduce clutter